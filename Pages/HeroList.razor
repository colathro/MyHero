@page "/herolist/{Id}"

@using MyHero.Controllers
@using MyHero.Data
@using System.Security.Claims;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using MyHero.Models
@using Microsoft.Extensions.Options
@using Microsoft.EntityFrameworkCore;
@using MyHero.Models;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Threading.Tasks;
@using Microsoft.Extensions.Options;
@inject ApplicationDbContext dbcontext;
@inject UserManager<ApplicationUser> UserManager
@inject IOptions<NotificationSettings> notificationSettings;

<div class="container">

    <div class="row">
        <div class="col-lg-10">
            <input type="text" placeholder="Search.." @bind="this.Codename" />
            <button class="btn btn-primary" type="button" @onclick="SearchHeroes">Search</button>
            <button class="btn btn-secondary" type="button" @onclick="ClearSeach">Clear</button>
        </div>
    </div>
    @if (Heroes == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="row">
            @foreach (var hero in Heroes)
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card h-100">
                        <a href="#"><img class="card-img-top" src="https://lakewangaryschool.sa.edu.au/wp-content/uploads/2017/11/placeholder-profile-sq.jpg" alt=""></a>
                        <div class="card-body">
                            <h4 class="card-title">
                                <a href="#">@hero.User.UserName</a>
                            </h4>
                            <h5>@hero.Tags</h5>
                            <p class="card-text">@hero.Description</p>
                        </div>
                        <div class="card-footer">
                            <small class="text-muted">&#9733; &#9733; &#9733; &#9733; &#9734;</small>
                            <button class="btn btn-primary" @onclick="() => SendRequest(hero.Id)">Send Request</button>
                        </div>
                    </div>
                </div>
            }
        </div>
        <!-- /.row -->
    }

</div>
<!-- /.container -->

@code {

    ApplicationUser user;
    List<Hero> Heroes;
    string Codename;

    [Parameter]
    public String Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetHeroes();
    }

    private async Task SendRequest(int heroId)
    {
        var userController = new UserController(dbcontext);
        await userController.SendRequest(Int32.Parse(Id), heroId);
    }

    private async Task SearchHeroes()
    {
        await GetHeroes();
        Heroes = Heroes.Where(h => h.Tags.Contains(this.Codename)).Select(h => h).ToList();
    }

    private async Task ClearSeach()
    {
        Codename = "";
        await GetHeroes();
    }

    private async Task GetHeroes()
    {
        var heroCount = new HeroController(dbcontext, notificationSettings);

        Heroes = heroCount.GetHeros(Int32.Parse(Id));
    }

}
